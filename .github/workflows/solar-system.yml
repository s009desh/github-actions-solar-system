name: Solar System Workflow

on: 
  workflow_dispatch: 
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
  unit-testing:
    name: Unit Testing
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
    env:
      MONGO_URI: 'mongodb://localhost:27017/superData'
      MONGO_USERNAME: non-prod-user
      MONGO_PASSWORD: non-prod-password
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 20

        
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install
    
      - name: Unit Testing
        id: nodejs-unit-testing
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-test-result
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    container: 
      image: node:20
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        options: 
          --name mongo

    env:
        MONGO_URI: 'mongodb://mongo:27017/superData'
        MONGO_USERNAME: non-prod-user
        MONGO_PASSWORD: non-prod-password
      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      #- name: Setup NodeJS Version
       # uses: actions/setup-node@v3
       # with:
        #  node-version: 20

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Coverage Result
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

 


  dev-deploy:
       needs: code-coverage
      
       runs-on: ubuntu-latest
       environment:
          name: devlopment
       steps:
        
        - name: checkout
          uses: actions/checkout@v4

        - uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0

        - uses: azure/k8s-set-context@v3
          with:
           method: kubeconfig
           kubeconfig: '${{ env.KUBECONFIG }}'
        
        
    
        - name: kubectl checking 
          run: |
            kubectl get nodes
            kubectl get pods

        - name: INGRESS IP 
          run: |
            INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            echo "INGRESS_IP=${INGRESS_IP}" >> $GITHUB_ENV
            

        - name: Replace tokens in a manifest file
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            CDN: 
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{vars.REPLICAS}}
            IMAGE: ${{ vars.DOCKER_USERNAME}}/solar.system:${{github.sha}}
            INGRESS_IP: ${{ env.INGRESS_IP }}

        - name: Check files
          run:
            cat kubernetes/development/*

          




